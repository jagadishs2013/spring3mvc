<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	
	<!-- <context:component-scan base-package="com.jagadish.spring.controller" /> -->
	<context:component-scan base-package="com.jagadish.spring" use-default-filters="false">    <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/></context:component-scan>
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
		
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
		<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/jsp/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!--  Spring Hibernate Integration -->
	
	<!-- configure Datasource bean -->
	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
	  <beans:property name="driverClassName" value="com.mysql.jdbc.Driver"/>
	  <beans:property name="url" value="jdbc:mysql://localhost:3306/TestDB"/>
	  <beans:property name="username" value="root"/>
	  <beans:property name="password" value="jagadish"/>
	</beans:bean>
	
	
	<!-- configure Session factory -->
	<beans:bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
	  <beans:property name="dataSource" ref="dataSource"/>
	  <beans:property name="hibernateProperties">
	  	<beans:props>
	 		<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</beans:prop>
	 		<beans:prop key="hibernate.show_sql">true</beans:prop>
	 	</beans:props>
	  </beans:property>
	  
	  <beans:property name="annotatedClasses">
	  	  <beans:list>
	  	  	<beans:value>com.jagadish.spring.model.Order</beans:value>
	  	  	<beans:value>com.jagadish.spring.model.Product</beans:value>
	  	  	<beans:value>com.jagadish.spring.model.Customer</beans:value>
	  	  </beans:list>
	   </beans:property>
	</beans:bean>
	
	<!-- configure Order DAO bean -->
	<beans:bean id="orderDAO" class="com.jagadish.spring.dao.OrderDAOImpl">
	   <beans:property name="sessionFactory" ref="sessionFactory"/>
	</beans:bean>

	<!--configure Order DAO bean -->
	<beans:bean id="orderService" class="com.jagadish.spring.service.OrderServiceImpl">
	   <beans:property name="orderDAO" ref="orderDAO"/>
	</beans:bean>	
	
	
	<!-- configure Product DAO bean -->
	<beans:bean id="productDAO" class="com.jagadish.spring.dao.ProductDAOImpl">
	   <beans:property name="sessionFactory" ref="sessionFactory"/>
	</beans:bean>

	
	<!-- configure Product DAO bean -->
	<beans:bean id="productService" class="com.jagadish.spring.service.ProductServiceImpl">
	   <beans:property name="productDAO" ref="productDAO"/>
	</beans:bean>
	

	<!-- configure transaction Manager 
	 Spring uses AOP for transaction management, 
	 you can now relate it with @Transactional annotation.-->
	<beans:bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
	   <beans:property name="sessionFactory" ref="sessionFactory"/>
	</beans:bean>
	
	
</beans:beans>